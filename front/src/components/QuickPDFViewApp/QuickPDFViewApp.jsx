import React, { useState, useRef } from 'react';
import styles from './QuickPDFViewApp.module.css';
import { MakeDraggable } from '../../utils/Draggable';
import { useUIContext } from '../../Contexts/UIContext';

export const useQuickPDFViewApp = () => {
  const { openWindow, closeWindow } = useUIContext();

  const openHandler = () => {
    openWindow('quickpdfviewer');
  };

  const closeHandler = () => {
    closeWindow('quickpdfviewer');
  };

  return { openHandler, closeHandler };
};

const dummyFiles = [
  {
    name: 'Ki≈üisel Kullanƒ±cƒ± Bilgileri.pdf',
    size: '740KB',
    modified: '12.05.2025',
    content: `
    NovaTech A.≈û. - Ki≈üisel Kullanƒ±cƒ± Bilgileri

    üë§ Ad Soyad: Onur Yƒ±ldƒ±z
    üÜî √áalƒ±≈üan ID: 487231
    üíº Departman: Bilgi Teknolojileri
    üìß Kurumsal E-posta: onur.yildiz@novatech.com
    üìû Dahili Numara: 2211
    üßë‚Äçüíª Kullanƒ±cƒ± Adƒ±: onur.yildiz
    üîë Ge√ßici ≈ûifre: Nova_25xyz!

    L√ºtfen bu bilgileri sadece kurum i√ßi sistemlerde kullanƒ±nƒ±z. G√ºvenliƒüiniz i√ßin ≈üifreyi ilk oturum a√ßma sonrasƒ± deƒüi≈ütirmeniz √∂nerilir.
      `
  },
  {
    name: 'ƒ∞≈ü S√∂zle≈ümesi.pdf',
    size: '1.2MB',
    modified: '12.05.2025',
    content: `
    ƒ∞≈û S√ñZLE≈ûMESƒ∞

    Bu s√∂zle≈üme, i≈üveren NovaTech A.≈û. ile √ßalƒ±≈üan Ahmet Yƒ±ldƒ±z arasƒ±nda, 12 Mayƒ±s 2025 tarihinde d√ºzenlenmi≈ütir.
    
    √áalƒ±≈üanƒ±n g√∂rev tanƒ±mƒ±: Yazƒ±lƒ±m Geli≈ütirici.
    √áalƒ±≈üma saatleri: Haftada 40 saat.
    Maa≈ü: Aylƒ±k br√ºt 38.000 TL.
    Gizlilik ve veri g√ºvenliƒüi h√ºk√ºmleri i≈übu s√∂zle≈ümenin ayrƒ±lmaz bir par√ßasƒ±dƒ±r.
    `
  },
  {
    name: 'Gizlilik Politikasƒ±.pdf',
    size: '860KB',
    modified: '10.05.2025',
    content: `
    Gƒ∞ZLƒ∞Lƒ∞K POLƒ∞Tƒ∞KASI

    Bu belge, NovaTech uygulamalarƒ± ve servislerinde kullanƒ±cƒ± verilerinin nasƒ±l toplandƒ±ƒüƒ±nƒ±, saklandƒ±ƒüƒ±nƒ± ve kullanƒ±ldƒ±ƒüƒ±nƒ± a√ßƒ±klar.

    Toplanan veriler:
    - ƒ∞sim, e-posta, IP adresi
    - Cihaz bilgileri ve kullanƒ±m istatistikleri

    Kullanƒ±cƒ±larƒ±n verileri yalnƒ±zca hizmet kalitesini artƒ±rmak amacƒ±yla i≈ülenir.
    Veriler √º√ß√ºnc√º ki≈üilerle payla≈üƒ±lmaz.
    `
  },
  {
    name: 'Personel El Kitabƒ±.pdf',
    size: '2.1MB',
    modified: '09.05.2025',
    content: `
    PERSONEL EL Kƒ∞TABI

    NovaTech √ßalƒ±≈üanlarƒ±nƒ±n uymasƒ± gereken temel ilkeler:

    - Her zaman profesyonel ve etik davranƒ±≈ü sergilenmelidir.
    - ≈ûirket bilgileri gizli tutulmalƒ±dƒ±r.
    - ƒ∞≈üyerinde fiziksel ve dijital g√ºvenlik kurallarƒ±na riayet edilmelidir.
    - Bilgi g√ºvenliƒüi ihlalleri derhal BT departmanƒ±na bildirilmelidir.

    T√ºm personel, bu kurallarƒ± okumu≈ü ve kabul etmi≈ü sayƒ±lƒ±r.
    `
  }
];

const QuickPDFViewApp = ({ closeHandler, style }) => {
  const [selectedFile, setSelectedFile] = useState(null);
  const [search, setSearch] = useState('');
  const appRef = useRef(null);
  MakeDraggable(appRef, `.${styles.header}`);

  const filtered = dummyFiles.filter(file =>
    file.name.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div className={styles.appWindow} style={style} ref={appRef} data-window="quickpdfviewer">
      <div className={styles.header}>
        <div className={styles.headerLeft}>
          <img src="/PDFViewer/pdf-logo.png" alt="QuickPDF Icon" />
          <h2>QuickPDF Viewer</h2>
        </div>
        <button className={styles.closeButton} onClick={closeHandler}>√ó</button>
      </div>

      <div className={styles.body}>
        {!selectedFile && (
          <>
            <input
              type="text"
              className={styles.searchInput}
              placeholder="Belge ara..."
              value={search}
              onChange={(e) => setSearch(e.target.value)}
            />

            {filtered.length === 0 ? (
              <div className={styles.empty}>G√∂sterilecek belge bulunamadƒ±.</div>
            ) : (
              <div className={styles.list}>
                {filtered.map((file, index) => (
                  <div key={index} className={styles.item} onClick={() => setSelectedFile(file)}>
                    <img src="/PDFViewer/pdf-file-format2.png" alt="PDF" />
                    <div>
                      <div className={styles.filename}>{file.name}</div>
                      <div className={styles.meta}>{file.size} ‚Ä¢ {file.modified}</div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </>
        )}

        {selectedFile && (
          <div className={styles.viewer}>
            <div className={styles.fakeToolbar}>
              <button onClick={() => setSelectedFile(null)} className={styles.backButton}>‚Üê Geri</button>
              <button className={styles.toolButton}>%100</button>
              <button className={styles.toolButton}>üñ® Yazdƒ±r</button>
              <button className={styles.toolButton}>‚≠ê Puanla</button>
            </div>
            <div className={styles.viewerHeader}>
              <span>{selectedFile.name}</span>
            </div>
            <div className={styles.fakePreview}>
              <div>{selectedFile.content}</div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default QuickPDFViewApp;
